/*
 * Marketplace ${VERSION_APP}
 * This is a place where sellers and buyers meat each other
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.TransactionCreateRequest;
import org.openapitools.client.model.TransactionCreateResponse;
import org.openapitools.client.model.TransactionDeleteRequest;
import org.openapitools.client.model.TransactionDeleteResponse;
import org.openapitools.client.model.TransactionReadRequest;
import org.openapitools.client.model.TransactionReadResponse;
import org.openapitools.client.model.TransactionUpdateRequest;
import org.openapitools.client.model.TransactionUpdateResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransactionApi
 */
@Ignore
public class TransactionApiTest {

    private final TransactionApi api = new TransactionApi();

    
    /**
     * Create transaction
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void transactionCreateTest() throws ApiException {
        TransactionCreateRequest transactionCreateRequest = null;
        TransactionCreateResponse response = api.transactionCreate(transactionCreateRequest);

        // TODO: test validations
    }
    
    /**
     * Delete transaction
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void transactionDeleteTest() throws ApiException {
        TransactionDeleteRequest transactionDeleteRequest = null;
        TransactionDeleteResponse response = api.transactionDelete(transactionDeleteRequest);

        // TODO: test validations
    }
    
    /**
     * Read transaction
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void transactionReadTest() throws ApiException {
        TransactionReadRequest transactionReadRequest = null;
        TransactionReadResponse response = api.transactionRead(transactionReadRequest);

        // TODO: test validations
    }
    
    /**
     * Update transaction
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void transactionUpdateTest() throws ApiException {
        TransactionUpdateRequest transactionUpdateRequest = null;
        TransactionUpdateResponse response = api.transactionUpdate(transactionUpdateRequest);

        // TODO: test validations
    }
    
}
