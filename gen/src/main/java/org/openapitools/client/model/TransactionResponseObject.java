/*
 * Marketplace ${VERSION_APP}
 * This is a place where sellers and buyers meat each other
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.openapitools.client.model.BaseTransaction;
import org.openapitools.client.model.TransactionPermissions;
import org.openapitools.client.model.TransactionResponseObjectAllOf;
import org.openapitools.client.model.TransactionStatus;
import org.openapitools.client.model.TransactionType;

/**
 * TransactionResponseObject
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-29T01:36:05.858934277+03:00[Europe/Moscow]")
public class TransactionResponseObject {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private String amount;

  public static final String SERIALIZED_NAME_TRANSACTION_TYPE = "transactionType";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_TYPE)
  private TransactionType transactionType;

  public static final String SERIALIZED_NAME_TRANSACTION_STATUS = "transactionStatus";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_STATUS)
  private TransactionStatus transactionStatus;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_OWNER_ID = "ownerId";
  @SerializedName(SERIALIZED_NAME_OWNER_ID)
  private String ownerId;

  public static final String SERIALIZED_NAME_LOCK = "lock";
  @SerializedName(SERIALIZED_NAME_LOCK)
  private String lock;

  public static final String SERIALIZED_NAME_PERMISSIONS = "permissions";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS)
  private Set<TransactionPermissions> permissions = null;


  public TransactionResponseObject title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Заголовок транзакции
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Заголовок транзакции")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public TransactionResponseObject amount(String amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Суммма транзакции
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Суммма транзакции")

  public String getAmount() {
    return amount;
  }


  public void setAmount(String amount) {
    this.amount = amount;
  }


  public TransactionResponseObject transactionType(TransactionType transactionType) {
    
    this.transactionType = transactionType;
    return this;
  }

   /**
   * Get transactionType
   * @return transactionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TransactionType getTransactionType() {
    return transactionType;
  }


  public void setTransactionType(TransactionType transactionType) {
    this.transactionType = transactionType;
  }


  public TransactionResponseObject transactionStatus(TransactionStatus transactionStatus) {
    
    this.transactionStatus = transactionStatus;
    return this;
  }

   /**
   * Get transactionStatus
   * @return transactionStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TransactionStatus getTransactionStatus() {
    return transactionStatus;
  }


  public void setTransactionStatus(TransactionStatus transactionStatus) {
    this.transactionStatus = transactionStatus;
  }


  public TransactionResponseObject id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Идентификатор транзакции
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Идентификатор транзакции")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public TransactionResponseObject ownerId(String ownerId) {
    
    this.ownerId = ownerId;
    return this;
  }

   /**
   * Идентификатор пользователя
   * @return ownerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Идентификатор пользователя")

  public String getOwnerId() {
    return ownerId;
  }


  public void setOwnerId(String ownerId) {
    this.ownerId = ownerId;
  }


  public TransactionResponseObject lock(String lock) {
    
    this.lock = lock;
    return this;
  }

   /**
   * Версия оптимистичной блокировки
   * @return lock
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Версия оптимистичной блокировки")

  public String getLock() {
    return lock;
  }


  public void setLock(String lock) {
    this.lock = lock;
  }


  public TransactionResponseObject permissions(Set<TransactionPermissions> permissions) {
    
    this.permissions = permissions;
    return this;
  }

  public TransactionResponseObject addPermissionsItem(TransactionPermissions permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new LinkedHashSet<TransactionPermissions>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<TransactionPermissions> getPermissions() {
    return permissions;
  }


  public void setPermissions(Set<TransactionPermissions> permissions) {
    this.permissions = permissions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionResponseObject transactionResponseObject = (TransactionResponseObject) o;
    return Objects.equals(this.title, transactionResponseObject.title) &&
        Objects.equals(this.amount, transactionResponseObject.amount) &&
        Objects.equals(this.transactionType, transactionResponseObject.transactionType) &&
        Objects.equals(this.transactionStatus, transactionResponseObject.transactionStatus) &&
        Objects.equals(this.id, transactionResponseObject.id) &&
        Objects.equals(this.ownerId, transactionResponseObject.ownerId) &&
        Objects.equals(this.lock, transactionResponseObject.lock) &&
        Objects.equals(this.permissions, transactionResponseObject.permissions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, amount, transactionType, transactionStatus, id, ownerId, lock, permissions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionResponseObject {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
    sb.append("    transactionStatus: ").append(toIndentedString(transactionStatus)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    lock: ").append(toIndentedString(lock)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

